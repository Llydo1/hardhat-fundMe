{
  "address": "0xf78B57fEeFD6705bbCA14daacB894134d4841db4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToamountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x747142042487b91f4d42522f516d78b649ef65ccf2ec959386ac3361b84851b8",
  "receipt": {
    "to": null,
    "from": "0xFdfE044E26f65f4204ff95b19F0d84D964F24f11",
    "contractAddress": "0xf78B57fEeFD6705bbCA14daacB894134d4841db4",
    "transactionIndex": 80,
    "gasUsed": "874079",
    "logsBloom": "0x
    "blockHash": "0x11c5a1345b7148d8cd0cb6d252edf49affeb46d3b0c2f3df15cd1fab4d6bd7f3",
    "transactionHash": "0x747142042487b91f4d42522f516d78b649ef65ccf2ec959386ac3361b84851b8",
    "logs": [],
    "blockNumber": 7704497,
    "cumulativeGasUsed": "21879672",
    "status": 1,
    "byzantium": true
  },
  "args": ["0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"],
  "numDeployments": 3,
  "solcInputHash": "e1f51d457347f7df7a00772e5d67cbda",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToamountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n// Declare solidity version\\npragma solidity ^0.8.0;\\n\\n// Import library\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n// @title A contract for crowd funding\\n// @author Llydo1\\n// @notice This contract is a practice to learn web3\\n// @dev This implements price feed from chainlinks\\ncontract FundMe {\\n    // Type Declaration\\n    using PriceConverter for uint256;\\n\\n    // State Variables!\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    address[] public s_funders;\\n    mapping(address => uint256) public s_addressToamountFunded;\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    // Modifier\\n    // @notice Check for the owner of the contract\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // Functions constructor\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // Functions recieve, fallback\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    // Functions\\n    // @notice This function funds this contract\\n    // @dev This implements price feed from chainlinks\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) > MINIMUM_USD,\\n            \\\"Did not send enough\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToamountFunded[msg.sender] += msg.value;\\n    }\\n\\n    // @notice This function withdraw the fund to the contract owner\\n    function withdraw() public onlyOwner {\\n        for (uint256 i = 0; i < s_funders.length; i++) {\\n            s_addressToamountFunded[s_funders[i]] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"There was an error\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x5e462f09a3f70df6ca855fb474018799dacd81420b9ddb7877c01ac2ec44af27\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Declare solidity version\\npragma solidity ^0.8.0;\\n\\n// Import library\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// @title A library for price converting\\n// @author Llydo1\\n// @dev This uses price feed from chainlinks\\nlibrary PriceConverter {\\n    // @dev This using price feed from chainlinks\\n    // @params priceFeed The address of AggregatorV3Interface contract\\n    // @return Usd amount represent the amount of ethereum\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    // @dev This function for get converting rate\\n    // @params ethAmount the amount of ether for converting\\n    // @params priceFeed The address of AggregatorV3Interface contract\\n    // @return The current conversion rate from chainlink datafeeds\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        return (getPrice(priceFeed) * ethAmount) / 1e18;\\n    }\\n}\\n\",\"keccak256\":\"0xb594a10c6e936e37a4b4335223605be90c33a6407c985deca8cab69163a295ad\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405162000fd638038062000fd683398181016040528101906100349190610115565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610142565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e2826100b7565b9050919050565b6100f2816100d7565b81146100fd57600080fd5b50565b60008151905061010f816100e9565b92915050565b60006020828403121561012b5761012a6100b2565b5b600061013984828501610100565b91505092915050565b60805160601c610e6e62000168600039600081816102fd01526105a90152610e6e6000f3fe6080604052600436106100745760003560e01c80636b69a5921161004e5780636b69a5921461011e578063741bef1a14610149578063b60d428814610174578063dba6335f1461017e57610083565b8063150c27a51461008d5780633ccfd60b146100ca57806354861af7146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af91906107a6565b6102e3565b6040516100c191906107ec565b60405180910390f35b3480156100d657600080fd5b506100df6102fb565b005b3480156100ed57600080fd5b5061010860048036038101906101039190610833565b610535565b604051610115919061086f565b60405180910390f35b34801561012a57600080fd5b50610133610574565b60405161014091906107ec565b60405180910390f35b34801561015557600080fd5b5061015e610581565b60405161016b91906108e9565b60405180910390f35b61017c6101a9565b005b34801561018a57600080fd5b506101936105a7565b6040516101a0919061086f565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105cb90919063ffffffff16565b11610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610961565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102da91906109b0565b92505081905550565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610380576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600080549050811015610425576000600160008084815481106103a9576103a8610a06565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061041d90610a35565b915050610383565b50600067ffffffffffffffff81111561044157610440610a7e565b5b60405190808252806020026020018201604052801561046f5781602001602082028036833780820191505090505b506000908051906020019061048592919061069c565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ac90610ade565b60006040518083038185875af1925050503d80600081146104e9576040519150601f19603f3d011682016040523d82523d6000602084013e6104ee565b606091505b5050905080610532576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052990610b3f565b60405180910390fd5b50565b6000818154811061054557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000670de0b6b3a7640000836105e0846105fc565b6105ea9190610b5f565b6105f49190610be8565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064557600080fd5b505afa158015610659573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067d9190610ca6565b5050509150506402540be400816106949190610d21565b915050919050565b828054828255906000526020600020908101928215610715579160200282015b828111156107145782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106bc565b5b5090506107229190610726565b5090565b5b8082111561073f576000816000905550600101610727565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077382610748565b9050919050565b61078381610768565b811461078e57600080fd5b50565b6000813590506107a08161077a565b92915050565b6000602082840312156107bc576107bb610743565b5b60006107ca84828501610791565b91505092915050565b6000819050919050565b6107e6816107d3565b82525050565b600060208201905061080160008301846107dd565b92915050565b610810816107d3565b811461081b57600080fd5b50565b60008135905061082d81610807565b92915050565b60006020828403121561084957610848610743565b5b60006108578482850161081e565b91505092915050565b61086981610768565b82525050565b60006020820190506108846000830184610860565b92915050565b6000819050919050565b60006108af6108aa6108a584610748565b61088a565b610748565b9050919050565b60006108c182610894565b9050919050565b60006108d3826108b6565b9050919050565b6108e3816108c8565b82525050565b60006020820190506108fe60008301846108da565b92915050565b600082825260208201905092915050565b7f446964206e6f742073656e6420656e6f75676800000000000000000000000000600082015250565b600061094b601383610904565b915061095682610915565b602082019050919050565b6000602082019050818103600083015261097a8161093e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109bb826107d3565b91506109c6836107d3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109fb576109fa610981565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a40826107d3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a7357610a72610981565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ac8600083610aad565b9150610ad382610ab8565b600082019050919050565b6000610ae982610abb565b9150819050919050565b7f54686572652077617320616e206572726f720000000000000000000000000000600082015250565b6000610b29601283610904565b9150610b3482610af3565b602082019050919050565b60006020820190508181036000830152610b5881610b1c565b9050919050565b6000610b6a826107d3565b9150610b75836107d3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bae57610bad610981565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bf3826107d3565b9150610bfe836107d3565b925082610c0e57610c0d610bb9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3881610c19565b8114610c4357600080fd5b50565b600081519050610c5581610c2f565b92915050565b6000819050919050565b610c6e81610c5b565b8114610c7957600080fd5b50565b600081519050610c8b81610c65565b92915050565b600081519050610ca081610807565b92915050565b600080600080600060a08688031215610cc257610cc1610743565b5b6000610cd088828901610c46565b9550506020610ce188828901610c7c565b9450506040610cf288828901610c91565b9350506060610d0388828901610c91565b9250506080610d1488828901610c46565b9150509295509295909350565b6000610d2c82610c5b565b9150610d3783610c5b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d7657610d75610981565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610db357610db2610981565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610df057610def610981565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e2d57610e2c610981565b5b82820290509291505056fea2646970667358221220f4f00a68c01bcc7eb28524a1b8d4043abe6f8b61be5fa3eaa3f466807f969ba364736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80636b69a5921161004e5780636b69a5921461011e578063741bef1a14610149578063b60d428814610174578063dba6335f1461017e57610083565b8063150c27a51461008d5780633ccfd60b146100ca57806354861af7146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af91906107a6565b6102e3565b6040516100c191906107ec565b60405180910390f35b3480156100d657600080fd5b506100df6102fb565b005b3480156100ed57600080fd5b5061010860048036038101906101039190610833565b610535565b604051610115919061086f565b60405180910390f35b34801561012a57600080fd5b50610133610574565b60405161014091906107ec565b60405180910390f35b34801561015557600080fd5b5061015e610581565b60405161016b91906108e9565b60405180910390f35b61017c6101a9565b005b34801561018a57600080fd5b506101936105a7565b6040516101a0919061086f565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105cb90919063ffffffff16565b11610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610961565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102da91906109b0565b92505081905550565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610380576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600080549050811015610425576000600160008084815481106103a9576103a8610a06565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061041d90610a35565b915050610383565b50600067ffffffffffffffff81111561044157610440610a7e565b5b60405190808252806020026020018201604052801561046f5781602001602082028036833780820191505090505b506000908051906020019061048592919061069c565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ac90610ade565b60006040518083038185875af1925050503d80600081146104e9576040519150601f19603f3d011682016040523d82523d6000602084013e6104ee565b606091505b5050905080610532576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052990610b3f565b60405180910390fd5b50565b6000818154811061054557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000670de0b6b3a7640000836105e0846105fc565b6105ea9190610b5f565b6105f49190610be8565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064557600080fd5b505afa158015610659573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067d9190610ca6565b5050509150506402540be400816106949190610d21565b915050919050565b828054828255906000526020600020908101928215610715579160200282015b828111156107145782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106bc565b5b5090506107229190610726565b5090565b5b8082111561073f576000816000905550600101610727565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077382610748565b9050919050565b61078381610768565b811461078e57600080fd5b50565b6000813590506107a08161077a565b92915050565b6000602082840312156107bc576107bb610743565b5b60006107ca84828501610791565b91505092915050565b6000819050919050565b6107e6816107d3565b82525050565b600060208201905061080160008301846107dd565b92915050565b610810816107d3565b811461081b57600080fd5b50565b60008135905061082d81610807565b92915050565b60006020828403121561084957610848610743565b5b60006108578482850161081e565b91505092915050565b61086981610768565b82525050565b60006020820190506108846000830184610860565b92915050565b6000819050919050565b60006108af6108aa6108a584610748565b61088a565b610748565b9050919050565b60006108c182610894565b9050919050565b60006108d3826108b6565b9050919050565b6108e3816108c8565b82525050565b60006020820190506108fe60008301846108da565b92915050565b600082825260208201905092915050565b7f446964206e6f742073656e6420656e6f75676800000000000000000000000000600082015250565b600061094b601383610904565b915061095682610915565b602082019050919050565b6000602082019050818103600083015261097a8161093e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109bb826107d3565b91506109c6836107d3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109fb576109fa610981565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a40826107d3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a7357610a72610981565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ac8600083610aad565b9150610ad382610ab8565b600082019050919050565b6000610ae982610abb565b9150819050919050565b7f54686572652077617320616e206572726f720000000000000000000000000000600082015250565b6000610b29601283610904565b9150610b3482610af3565b602082019050919050565b60006020820190508181036000830152610b5881610b1c565b9050919050565b6000610b6a826107d3565b9150610b75836107d3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bae57610bad610981565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bf3826107d3565b9150610bfe836107d3565b925082610c0e57610c0d610bb9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3881610c19565b8114610c4357600080fd5b50565b600081519050610c5581610c2f565b92915050565b6000819050919050565b610c6e81610c5b565b8114610c7957600080fd5b50565b600081519050610c8b81610c65565b92915050565b600081519050610ca081610807565b92915050565b600080600080600060a08688031215610cc257610cc1610743565b5b6000610cd088828901610c46565b9550506020610ce188828901610c7c565b9450506040610cf288828901610c91565b9350506060610d0388828901610c91565b9250506080610d1488828901610c46565b9150509295509295909350565b6000610d2c82610c5b565b9150610d3783610c5b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d7657610d75610981565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610db357610db2610981565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610df057610def610981565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e2d57610e2c610981565b5b82820290509291505056fea2646970667358221220f4f00a68c01bcc7eb28524a1b8d4043abe6f8b61be5fa3eaa3f466807f969ba364736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToamountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
